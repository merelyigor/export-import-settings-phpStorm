<templateSet group="my-shortcut">
  <template name="log" value="console.log('');" description="console.log(' ');" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="&lt;&gt;" value="&lt;?php  ?&gt;" description="&lt;?php  ?&gt;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="PHP" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="&lt;&gt;=" value="&lt;?=  ?&gt;" description="&lt;?=  ?&gt;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Bash" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="HAML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SHELL_SCRIPT" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="Vue" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="dd" value="dd();" description="varDump" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Bash" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="HAML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SHELL_SCRIPT" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="Vue" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="onclick" value="$(&quot;#anything&quot;).on('click', function(){&#10;&#10;});" description="JQuery - on 'click', function()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="jsbuttonup" value="// SHOW AND HIDE BUTTON CLICK UP BUTTON&#10;$(window).scroll(function () {&#10;    if ($(this).scrollTop() &gt; 50) {&#10;        $('.js-up').css('visibility', 'visible');&#10;    } else {&#10;        $('.js-up').css('visibility', 'hidden');&#10;    }&#10;});" description="add jQuery function to show and hide scroll buttons up page" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="jsscrolltop" value="$('.js-up-scroll').on('click', function () {&#10;    $('html, body').animate({scrollTop: 0}, 1000);&#10;    return false;&#10;});" description="JQuery function to smoothly scroll up the page" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="!doc" value="$(document).ready(function () {&#10;    &#10;});" description="Жеквери документ еди" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="jsscrollblock" value="$(&quot;.js-scroll-to-id-block&quot;).on('click', function () {&#10;    $([document.documentElement, document.body]).animate({&#10;        scrollTop: $(&quot;#this-block-id-to-scroll&quot;).offset().top&#10;    }, 1000);&#10;});" description="JQuery function to scroll to a block by id." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="jscopytext" value="$(&quot;.js-copy-button-class&quot;).on('click', function () {&#10;    let $temp = $(&quot;&lt;textarea&gt;&quot;);&#10;    $(&quot;body&quot;).append($temp);&#10;    $temp.val($(&quot;#copy-text-this-id&quot;).text()).select();&#10;    document.execCommand(&quot;copy&quot;);&#10;    $temp.remove();&#10;});" description="JQuery copy text function" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="jsfancyboxinit" value="// FANCYBOX MAIN FUNCTION&#10;let options_popup = {&#10;    toolbar: false,&#10;    smallBtn: false,&#10;};&#10;&#10;function popup_content(var_if) {&#10;&#10;    let popup_1 = &quot;&lt;span class=\&quot;this-content-html-popup\&quot;&gt;this content html popup&lt;/span&gt;&quot;;&#10;&#10;    let popup_2 = {&#10;        src  : '#popup-dictionary', // this id block with content html popup&#10;        type : 'inline',&#10;        opts : { // option fancybox&#10;            touch: false,&#10;            toolbar: false,&#10;            smallBtn: false,&#10;        }&#10;    };&#10;&#10;    if (var_if === 'popup-1')&#10;        return popup_1;&#10;    if (var_if === 'popup-2')&#10;        return popup_2;&#10;}&#10;&#10;$(&quot;.js-popup-1-button-show-popup&quot;).on('click', function () {&#10;    $.fancybox.open(popup_content('popup-1'), options_popup);&#10;});&#10;&#10;$(&quot;.js-popup-2-button-show-popup&quot;).on('click', function () {&#10;    $.fancybox.open(popup_content('popup-2'));&#10;});" description="button popup fancybox initialization function" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="unbind" value="$(&quot;.your-onclick-object&quot;).unbind('click');" description="QJuery unbind click event" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="sole" value="console.log('');" description="console.log('');" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="str_replace_br" value="preg_replace(&quot;/(\r\n)/&quot;, &quot;&lt;br/&gt;&quot;, $type_room-&gt;description)" description="replace string to &lt;br/&gt;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="getDates" value="function getDatesArrayFromTo($start_date, $end_date, $format = 'Y-m-d')&#10;{&#10;    $array = array();&#10;    $interval = new DateInterval('P1D');&#10;&#10;    $realEnd = new DateTime($end_date);&#10;    $realEnd-&gt;add($interval);&#10;&#10;    $period = new DatePeriod(new DateTime($start_date), $interval, $realEnd);&#10;&#10;    foreach ($period as $date) {&#10;        $array[] = $date-&gt;format($format);&#10;    }&#10;&#10;    return $array;&#10;}" description="получить масив дат зная начальную дату и конечную" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="fore" value="foreach ($array as $key =&gt; $item) { &#10;    dd($item);&#10;} " description="foreach func php" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
      <option name="Twig" value="true" />
    </context>
  </template>
  <template name="sett" value="setTimeout(function () {&#10;&#10;}, 500);" description="setTimeout" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ECMAScript6" value="true" />
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="@mob" value="@media screen and (max-width: $width-container)" description="@media screen and (max-width: $max-container)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="CSS" value="true" />
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="switch" value="switch ($i) {&#10;    case 0:&#10;        echo &quot;i равно 0&quot;;&#10;        break;&#10;    case 1:&#10;        echo &quot;i равно 1&quot;;&#10;        break;&#10;    case 2:&#10;        echo &quot;i равно 2&quot;;&#10;        break;&#10;    default:&#10;       echo &quot;i не равно 0, 1 или 2&quot;;&#10;}&#10;&#10;switch ($i):&#10;    case 0:&#10;        echo &quot;i равно 0&quot;;&#10;        break;&#10;    case 1:&#10;        echo &quot;i равно 1&quot;;&#10;        break;&#10;    case 2:&#10;        echo &quot;i равно 2&quot;;&#10;        break;&#10;    default:&#10;        echo &quot;i не равно to 0, 1 или 2&quot;;&#10;endswitch;" description="switch case php" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="ddinit" value="function dd($var_dump,$html=false,$die=false){echo'&lt;pre style=&quot;color:#850085;z-index:999999999!important;position:relative;background: chartreuse;&quot;&gt;';if($html)var_dump(htmlspecialchars($var_dump,ENT_QUOTES));else var_dump($var_dump);echo'&lt;/pre&gt;';if($die){die();}}" description="инициализация vardump" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="acfhideadmin" value="add_filter( 'acf/settings/show_admin', '__return_false' );" description="скрыть GUI настройки acf плагина в админке" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="acfoptionpage" value="if (function_exists('acf_add_options_page'))&#10;    acf_add_options_page([&#10;        'page_title' =&gt; 'Site Settings Menu',&#10;        'menu_title' =&gt; 'Configure email sending',&#10;        'menu_slug' =&gt; 'theme-email-settings',&#10;        'capability' =&gt; 'edit_posts',&#10;        'redirect' =&gt; true&#10;    ]);" description="регистрация страницы с настройками для ACF плагина" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="get_term_levels" value="/*****&#10; * Determining the category level&#10; ******/&#10;function get_levels_terms($this_term_obg)&#10;{&#10;    $ancestors = get_ancestors($this_term_obg-&gt;term_id, $this_term_obg-&gt;taxonomy);&#10;    $level = count($ancestors);&#10;    return ++$level;&#10;}" description="получить уровень вложенности категории" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="get_level_terms" value="/*****&#10; * Determining the category level&#10; ******/&#10;function get_levels_terms($this_term_obg)&#10;{&#10;    $ancestors = get_ancestors($this_term_obg-&gt;term_id, $this_term_obg-&gt;taxonomy);&#10;    $level = count($ancestors);&#10;    return ++$level;&#10;}" description="получить уровень вложенности категории" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="comment" value="/**&#10; * функция ла ла ла&#10; *&#10; * @param array $param = что за параметр&#10; * @param string $param = что за параметр&#10; *&#10; * @uses lalala_func()&#10; *&#10; * @return string $return = что возращает?&#10; */" description="PHP комментарий" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="get_current_url" value="# full URL of the current page&#10;global $wp;&#10;$current_url = home_url( add_query_arg( array(), $wp-&gt;request ) );&#10;&#10;# get only /SLUG/ pages&#10;global $wp;&#10;$current_slug = add_query_arg( array(), $wp-&gt;request );" description="get_current_url" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="get_slug_by_url" value="function get_slug_by_url($url) # get &quot;slug&quot; from the full URL address&#10;{&#10;    preg_match('/[^\/]+(?=\/$|$)/', $url, $matches);&#10;    return str_replace('/', '', $matches[0]);&#10;}" description="get &quot;slug&quot; from the full URL address" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="redirection_function" value="&#10;&#10;# зависимая функция - удалить если была обьявлена ранее &#10;function get_slug_by_url($url) # get &quot;slug&quot; from the full URL address&#10;{&#10;    preg_match('/[^\/]+(?=\/$|$)/', $url, $matches);&#10;    return str_replace('/', '', $matches[0]);&#10;}&#10;&#10;function run_write_to_db($status = 301, $url_from, $url_to, $internal_redirect = true, $SQLI_WPDB)&#10;{&#10;    /**---- table columns that are passed in sql query&#10;     * (url, match_url, match_data, regex, position, last_count, last_access, group_id, status, action_type, action_code, action_data, match_type, title)&#10;     */&#10;&#10;&#10;    # подключение БД вынести за пределы для единоразового подключения&#10;    # $SQLI_WPDB = new mysqli(CUSTOM_DB_HOST, CUSTOM_DB_USER, CUSTOM_DB_PASSWORD, CUSTOM_DB_NAME, 3306);&#10;    # if ($SQLI_WPDB-&gt;connect_errno) {&#10;    #     # checking database connection errors&#10;    #     echo &quot;Не удалось подключиться к MySQL: (&quot; . $GLOBALS['mysqli']-&gt;connect_errno . &quot;) &quot; . $GLOBALS['mysqli']-&gt;connect_error;&#10;    #     $message = &quot;Failed to connect to MySQL: (&quot; . $GLOBALS['mysqli']-&gt;connect_errno . &quot;) &quot; . $GLOBALS['mysqli']-&gt;connect_error;&#10;    #     exit();&#10;    # }&#10;&#10;&#10;    $table_prefix = 'utqawp_';&#10;    $data = [];&#10;    $slug = get_slug_by_url($url_from);&#10;    # parameters for transmitting a redirect to the database&#10;    $table_name = $table_prefix . 'redirection_items'; # table name in export import&#10;    $data['url'] = strval('/' . $slug . '/');&#10;    $data['match_url'] = strval('/' . $slug); // add (/) only at the beginning&#10;    $data['match_data'] = '';&#10;    $data['regex'] = 0;&#10;    $data['position'] = 0;&#10;    $data['last_count'] = 0;&#10;    $data['last_access'] = '0000-00-00 00:00:00';&#10;    $data['group_id'] = 1;&#10;    $data['status'] = 'enabled';&#10;    $data['match_type'] = 'url';&#10;    $data['title'] = null;&#10;&#10;    if ($status == 410) {&#10;        $data['action_code'] = 410;&#10;        $data['action_data'] = '';&#10;        $data['action_type'] = 'error';&#10;    } elseif ($status == 301) {&#10;        if ($internal_redirect) {&#10;            $slug = get_slug_by_url($url_to);&#10;            $data['action_data'] = strval('/' . $slug . '/');&#10;        } else {&#10;            $data['action_data'] = strval($url_to);&#10;        }&#10;        $data['action_code'] = 301;&#10;        $data['action_type'] = 'url';&#10;    }&#10;&#10;&#10;    # write all the data in a table swp_redirection_items&#10;    $query = 'INSERT INTO ' . $table_name .&#10;        ' (url, match_url, match_data, regex, position, last_count, last_access, group_id, status, action_type, action_code, action_data, match_type, title) VALUES (&quot;'&#10;        . $data['url'] . '&quot;,&quot;'&#10;        . $data['match_url'] . '&quot;,&quot;'&#10;        . $data['match_data'] . '&quot;,&quot;'&#10;        . $data['regex'] . '&quot;,&quot;'&#10;        . $data['position'] . '&quot;,&quot;'&#10;        . $data['last_count'] . '&quot;,&quot;'&#10;        . $data['last_access'] . '&quot;,&quot;'&#10;        . $data['group_id'] . '&quot;,&quot;'&#10;        . $data['status'] . '&quot;,&quot;'&#10;        . $data['action_type'] . '&quot;,&quot;'&#10;        . $data['action_code'] . '&quot;,&quot;'&#10;        . $data['action_data'] . '&quot;,&quot;'&#10;        . $data['match_type'] . '&quot;,&quot;'&#10;        . $data['title'] . '&quot;);';&#10;&#10;    $query_check = &quot;SELECT `url` FROM {$table_name} WHERE url = '{$data['url']}'&quot;;&#10;    $result['SQLI_WPDB_check'] = $SQLI_WPDB-&gt;query($query_check);&#10;    if ($result['SQLI_WPDB_check']-&gt;num_rows &lt; 1 &amp;&amp; empty(mysqli_fetch_row($result['SQLI_WPDB_check'])[0]))&#10;        $result['SQLI_WPDB'] = $SQLI_WPDB-&gt;query($query); // execute a database query&#10;    else&#10;        return &quot;The database already has a redirect field from this URL -&gt; {$data['url']}&quot; . PHP_EOL;&#10;&#10;    /**---- I write logs to a file ---**/&#10;    if ($result['SQLI_WPDB'] == false) {&#10;        return &quot;add redirect {$data['action_code']} ------ false ERROR - error executing sql query --&gt; {$data['url']}&quot; . PHP_EOL;&#10;    } elseif ($result['SQLI_WPDB'] == true) {&#10;        if ($data['action_code'] == 410)&#10;            return &quot;add redirect {$data['action_code']} ------ SUCCESSFULLY WRITTEN --&gt; {$data['url']}&quot; . PHP_EOL;&#10;        elseif ($data['action_code'] == 301)&#10;            return &quot;add redirect {$data['action_code']} ------ SUCCESSFULLY WRITTEN --&gt; {$data['url']} redirect to --&gt; {$data['action_data']}&quot; . PHP_EOL;&#10;    }&#10;    # I free the memory occupied by the request to the database (at the moment there is no pulling out from byza but only writing) is necessary only when pulling data from their BD&#10;//    mysqli_free_result($result);&#10;}" description="функция добавления редиректов для плагина Redirection https://redirection.me/" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="cropstr" value="function crop_text_by_chars($string = '', $start = 0, $max_value = 130)&#10;{&#10;    $string = strip_tags($string);&#10;    $string = substr($string, $start, $max_value);&#10;    $string = rtrim($string, &quot;!,.-&quot;);&#10;    $string = substr($string, $start, strrpos($string, ' '));&#10;    return $string;&#10;}" description="Обрезать строку по символам не нарушая целосности слов" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="translate" value="/**&#10; * text translation function via google translation&#10; * ---------------------------------------------------------------------------------------------------------------------&#10; */&#10;function google_translate($text, $lang_input, $lang_uotput)&#10;{&#10;    $query_data = array(&#10;        'client' =&gt; 'x',&#10;        'q' =&gt; $text,&#10;        'sl' =&gt; $lang_input,&#10;        'tl' =&gt; $lang_uotput&#10;    );&#10;    $filename = 'http://translate.google.ru/translate_a/t';&#10;    $options = array(&#10;        'http' =&gt; array(&#10;            'user_agent' =&gt; 'Mozilla/5.0 (Windows NT 6.0; rv:26.0) Gecko/20100101 Firefox/26.0',&#10;            'method' =&gt; 'POST',&#10;            'header' =&gt; 'Content-type: application/x-www-form-urlencoded',&#10;            'content' =&gt; http_build_query($query_data)&#10;        )&#10;    );&#10;    $context = stream_context_create($options);&#10;    $response = file_get_contents($filename, false, $context);&#10;    return json_decode($response);&#10;}" description="Переводчик текста через Гугл переводчик Google Translation" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xhprof" value="tideways_xhprof_enable();&#10;&#10;$data = tideways_xhprof_disable();&#10;file_put_contents(system('pwd') . &quot;/etc/xhprof/&quot; . uniqid() . &quot;.yourapp.xhprof&quot;,&#10;    serialize($data)&#10;);" description="xhprof debugging function" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="hotjarload" value="&lt;script&gt;&#10;    window.hotjarStatus = false;&#10;    window.onscroll = function () {&#10;        startHotjar()&#10;    };&#10;    document.addEventListener(&quot;DOMContentLoaded&quot;, function (event) {&#10;        document.onmousemove = function (e) {&#10;            startHotjar()&#10;        }&#10;    });&#10;&#10;&#10;    function startHotjar() {&#10;        console.log('hotjarStatus', window.hotjarStatus);&#10;        if (window.hotjarStatus == true) return;&#10;&#10;        (function (h, o, t, j, a, r) {&#10;            h.hj = h.hj || function () {&#10;                (h.hj.q = h.hj.q || []).push(arguments)&#10;            };&#10;            h._hjSettings = {hjid: 263381, hjsv: 5};&#10;            a = o.getElementsByTagName('head')[0];&#10;            r = o.createElement('script');&#10;            r.async = 1;&#10;            r.src = t + h._hjSettings.hjid + j + h._hjSettings.hjsv;&#10;            a.appendChild(r);&#10;        })(window, document, '//static.hotjar.com/c/hotjar-', '.js?sv=');&#10;        window.hotjarStatus = true;&#10;    }&#10;&lt;/script&gt;&#10;" description="Подключение загрузки js скрипта после скрола или движения мышкой" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="HAML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SHELL_SCRIPT" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="Vue" value="false" />
    </context>
  </template>
  <template name="adduserwp" value="add_action('init', function () {&#10;&#9;$user = 'superadmin';&#10;&#9;$pass = '132435';&#10;&#9;$email = 'email@domain.com';&#10;&#9;if (!username_exists($user) &amp;&amp; !email_exists($email)) {&#10;&#9;&#9;$user_id = wp_create_user($user, $pass, $email);&#10;&#9;&#9;$user = new WP_User($user_id);&#10;&#9;&#9;$user-&gt;set_role('administrator');&#10;&#9;}&#10;});" description="add user admin to wordpress site" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>